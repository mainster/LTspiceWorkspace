Version 4
SHEET 1 2940 1320
WIRE 1552 96 1520 96
WIRE 1968 96 1552 96
WIRE 1568 128 1552 128
WIRE 1936 128 1568 128
WIRE 1520 240 1520 96
WIRE 1648 240 1520 240
WIRE 1712 256 1696 256
WIRE 1552 272 1552 128
WIRE 1648 272 1552 272
WIRE 624 288 576 288
WIRE 656 288 624 288
WIRE 784 288 736 288
WIRE 816 288 784 288
WIRE 1072 288 1056 288
WIRE 1104 288 1072 288
WIRE 1264 288 1216 288
WIRE 1280 288 1264 288
WIRE 960 304 880 304
WIRE 576 320 576 288
WIRE 736 320 736 288
WIRE 880 320 880 304
WIRE 960 320 960 304
WIRE 1072 320 1056 320
WIRE 1104 320 1072 320
WIRE 1264 320 1216 320
WIRE 1280 320 1264 320
WIRE 1520 320 1520 240
WIRE 1648 320 1520 320
WIRE 1712 320 1712 256
WIRE 1728 320 1712 320
WIRE 1728 336 1696 336
WIRE 1808 336 1776 336
WIRE 1840 336 1808 336
WIRE 1904 336 1888 336
WIRE 1968 336 1968 96
WIRE 1968 336 1904 336
WIRE 2000 336 1968 336
WIRE 2016 336 2000 336
WIRE 1072 352 1056 352
WIRE 1104 352 1072 352
WIRE 1264 352 1216 352
WIRE 1280 352 1264 352
WIRE 1648 352 1488 352
WIRE 1728 352 1712 352
WIRE 1888 352 1888 336
WIRE 1072 384 1056 384
WIRE 1104 384 1072 384
WIRE 1264 384 1216 384
WIRE 1280 384 1264 384
WIRE 1552 400 1552 272
WIRE 1648 400 1552 400
WIRE 1840 400 1840 336
WIRE 1856 400 1840 400
WIRE 576 416 576 400
WIRE 736 416 736 400
WIRE 880 416 880 400
WIRE 960 416 960 400
WIRE 1072 416 1056 416
WIRE 1104 416 1072 416
WIRE 1264 416 1216 416
WIRE 1280 416 1264 416
WIRE 1712 416 1712 352
WIRE 1712 416 1696 416
WIRE 1488 432 1488 352
WIRE 1584 432 1488 432
WIRE 1632 432 1616 432
WIRE 1648 432 1632 432
WIRE 1072 448 1056 448
WIRE 1104 448 1072 448
WIRE 1264 448 1216 448
WIRE 1280 448 1264 448
WIRE 1552 512 1552 400
WIRE 1648 512 1552 512
WIRE 1712 528 1696 528
WIRE 1520 544 1520 320
WIRE 1616 544 1520 544
WIRE 1088 560 1056 560
WIRE 1200 560 1168 560
WIRE 1488 592 1488 432
WIRE 1648 592 1488 592
WIRE 1712 592 1712 528
WIRE 1728 592 1712 592
WIRE 1728 608 1696 608
WIRE 1808 608 1776 608
WIRE 1840 608 1808 608
WIRE 1520 624 1520 544
WIRE 1584 624 1520 624
WIRE 1616 624 1584 624
WIRE 1728 624 1712 624
WIRE 1904 656 1888 656
WIRE 1936 656 1936 128
WIRE 1936 656 1904 656
WIRE 1552 672 1552 512
WIRE 1584 672 1552 672
WIRE 1648 672 1584 672
WIRE 1888 672 1888 656
WIRE 1712 688 1712 624
WIRE 1712 688 1696 688
WIRE 1376 704 1360 704
WIRE 1488 704 1488 592
WIRE 1488 704 1376 704
WIRE 1616 704 1488 704
WIRE 1360 720 1360 704
WIRE 1840 720 1840 608
WIRE 1856 720 1840 720
WIRE 1360 816 1360 800
FLAG 1808 336 y1
FLAG 1568 128 y0~
FLAG 1552 96 y1~
FLAG 1376 704 x
FLAG 1632 432 _x
FLAG 1808 608 y0
FLAG 2000 336 z
FLAG 1360 816 0
FLAG 1072 288 z
FLAG 1264 288 ...z...
FLAG 1072 448 x
FLAG 1264 448 ...x...
FLAG 1072 352 y0
FLAG 1264 352 ...Y0...
FLAG 1072 320 y1
FLAG 1264 320 ...Y1...
FLAG 1904 336 y1~
FLAG 1904 656 y0~
FLAG 1888 432 0
FLAG 1888 752 0
FLAG 736 416 0
FLAG 576 416 0
FLAG 624 288 T1_ns
FLAG 784 288 T0_ns
FLAG 880 416 0
FLAG 960 416 0
FLAG 1072 416 y0~
FLAG 1264 416 ...Y0~...
FLAG 1072 384 y1~
FLAG 1264 384 ...Y1~...
FLAG 1200 560 ...x....
FLAG 1056 560 0
FLAG 1584 624 y1~
FLAG 1584 672 y0~
SYMBOL MDB_sym\\AND2s 1664 256 R0
SYMATTR Value TD=0n
SYMATTR InstName U1
SYMBOL MDB_sym\\OR3s 1744 336 R0
SYMATTR Value TD=0n
SYMATTR InstName U4
SYMBOL MDB_sym\\AND2s 1664 336 R0
SYMATTR Value TD=0n
SYMATTR InstName U2
SYMBOL MDB_sym\\inv4 1568 368 R0
SYMATTR InstName U7
SYMBOL source-V 1360 704 R0
WINDOW 123 0 0 Left 2
WINDOW 39 0 0 Left 2
WINDOW 0 34 78 Left 2
WINDOW 3 554 109 Right 2
SYMATTR InstName V1
SYMATTR Value PULSE(0 5 {init_delay} 10p 10p {max(T0,T1)} {2*max(T0,T1)})
SYMBOL EIT_Digital\\probe_dig 1104 464 M180
SYMATTR Value T=0
SYMATTR InstName U9
SYMBOL EIT_Digital\\probe_dig 1104 432 M180
SYMATTR Value T=1
SYMATTR InstName U10
SYMBOL bv 1888 656 R0
WINDOW 0 -54 87 Left 2
WINDOW 3 -1247 -556 Left 2
SYMATTR InstName B0
SYMATTR Value V=if( T0+.5, delay(V(y0) , T0+1s*(inv(T0+.5))),  V(y0))     ;  = B0
SYMBOL source-V 576 304 R0
WINDOW 123 0 0 Left 2
WINDOW 39 0 0 Left 2
SYMATTR InstName V2
SYMATTR Value {T1*1e9}
SYMBOL source-V 736 304 R0
WINDOW 123 0 0 Left 2
WINDOW 39 0 0 Left 2
SYMATTR InstName V3
SYMATTR Value {T0*1e9}
SYMBOL bv 1888 336 R0
WINDOW 0 -54 87 Left 2
WINDOW 3 -1248 -211 Left 2
SYMATTR InstName B1
SYMATTR Value V=if( T1+.5, delay(V(y1) , T1+1s*(inv(T1+.5))),  V(y1))     ;  = B1
SYMBOL source-V 880 304 R0
WINDOW 123 0 0 Left 2
WINDOW 39 0 0 Left 2
WINDOW 3 -108 161 Left 2
SYMATTR Value SINE(0 1 {1/(Tcom/50)})
SYMATTR InstName V4
SYMBOL res 944 304 R0
SYMATTR InstName R1
SYMATTR Value 1
SYMBOL EIT_Digital\\probe_dig 1104 304 R0
SYMATTR Value T=4
SYMATTR InstName U8
SYMBOL EIT_Digital\\probe_dig 1104 272 R0
SYMATTR Value T=5
SYMATTR InstName U11
SYMBOL EIT_Digital\\probe_dig 1104 368 R0
SYMATTR Value T=2
SYMATTR InstName U12
SYMBOL EIT_Digital\\probe_dig 1104 336 R0
SYMATTR Value T=3
SYMATTR InstName U15
SYMBOL bv 1184 560 R90
WINDOW 0 -27 56 VBottom 2
WINDOW 3 53 175 VTop 2
SYMATTR InstName B2
SYMATTR Value V= 6*inv(TIME+.5-limDel) + (1-inv(TIME+.5-limDel))* V(...x...)
SYMBOL MDB_sym\\AND2s 1664 416 R0
SYMATTR Value TD=0n
SYMATTR InstName U3
SYMBOL MDB_sym\\AND2s 1664 528 R0
SYMATTR Value TD=0n
SYMATTR InstName U5
SYMBOL MDB_sym\\OR3s 1744 608 R0
SYMATTR Value TD=0n
SYMATTR InstName U6
SYMBOL MDB_sym\\AND2s 1664 608 R0
SYMATTR Value TD=0n
SYMATTR InstName U13
SYMBOL MDB_sym\\AND2s 1664 688 R0
SYMATTR Value TD=0n
SYMATTR InstName U14
SYMBOL MDB_sym\\inv4 1600 480 R0
SYMATTR InstName U16
SYMBOL MDB_sym\\inv4 1600 560 R0
SYMATTR InstName U17
SYMBOL MDB_sym\\inv4 1600 640 R0
SYMATTR InstName U18
TEXT 1472 744 Left 2 ;ideales Verknüpfungsnetz
TEXT 1464 176 Left 2 ;VN
TEXT 1432 8 Left 2 !.tran {600*3n+init_delay}\n.step param SEL list 1 2 3
TEXT 1816 224 Left 2 !.ic V(y1)=5\n.ic V(y0)=5
TEXT 696 688 Left 2 !.MEAS TRAN T1_ns FIND V(T1calc) AT=1u\n.MEAS TRAN T0_ns FIND V(T0calc) AT=1u
TEXT 616 -424 Left 2 ;Erst prüfen ob T0 auf 0ns gesetzt wurde\n(T0 > 0ns)  ->  y0~(t) = y0(t-T0)\n(T0 = 0ns)  ->  y0~(t) = y0(t)\n \nDefinition von if(x, y, z) und inv(x)\nIf x > .5, then y else z\n0. if x > .5, else 1. \n \nAber Vorsicht, beide alternativen müssen immer gültige \nArgumente besitzen auch wenn y oder z niemals gewählt\nwird. Deswegen ist V=if( {T0+.5},  delay( V(y0), T0 ),  V(y0) )\nnur für T0>0 gültig. Obwohl anderenfalls V=V(y0) selektiert \nwird, meckert Spice dass das Argument von delay(...,T0) \nnicht <=0 sein darf.\n \nFIX: \nT0+1s*(inv(T0+.5)) als Verzögerung einsetzen, für T0 <= 0 wird dieser\nParameter zu delay(..., 1s), die Arbiträrquelle benutzt aber V=V(y0)\nFür T0 > 0 fällt der hintere Sumand weg und es gilt V=delay(V(y0), T0)
TEXT 1480 -440 Left 2 ;Digitale Systeme | Skript S.70...75   Prof. Schäfer\nAsynchrone Schaltnetze mit Rückkopplung\n10-02-2015   MDB
TEXT 1432 -304 Left 2 !.param Tcom = 100ns   ;  Common Delay\n.param SEL=1\n \n; initial delay for transition x: 0 -> 1\n.param init_delay=200n   \n.param vpwr$_digital = 5V\n.options plotwinsize=0
TEXT 1960 -56 Right 2 !.param T1 = table(SEL,    1,100n,   2,500n,   3,100n,   4,100n)
TEXT 720 600 Left 2 !.param limDel = 100p
TEXT 720 520 Left 2 ;Für Autoskalierung mit 1V Abstand\nzur Oberkante der Plots
TEXT 1928 -88 Right 2 !.param T0 = table(SEL,    1,500n,   2,100n,   3,100n,   4,0)
TEXT 536 832 Left 2 ;Ein Lauf, der in verschiedene Endzustände münden kann oder zur dauernden \nInstabilität führt,  heißt kritischer Lauf.  Abhilfe:     \nUmcodierung der Zustände  Zustandsdiagramm: nur Einkomponentenübergänge: \n \nÜbergangstabelle (...)\n \nr1(i+1) = (_x ^ r0) v (x ^ r1) v (r1 ^ r0)\nr0(i+1) = (_x ^ r0) v (x ^ _r1) v (_r1 ^ r0)
TEXT 784 1032 Left 2 ;HAZARD- \nTerm
LINE Normal 1969 -72 1431 -72
RECTANGLE Normal 1792 768 1456 160 2
RECTANGLE Normal 1370 204 570 -468 2
RECTANGLE Normal 1360 192 560 -480
RECTANGLE Normal 1960 -344 1448 -472 2
RECTANGLE Normal 1952 -352 1440 -480
RECTANGLE Normal 1312 656 704 496 2
RECTANGLE Normal 1970 -33 1646 -111
RECTANGLE Normal 1810 -33 1725 -111
RECTANGLE Normal 1970 -33 1886 -111
RECTANGLE Normal 1725 -33 1432 -111
RECTANGLE Normal 872 1072 765 955 2
